{"swagger": "2.0","info": {"version": "1.0.0","title": "GeoWave API","description": "REST API for GeoWave CLI commands","termsOfService": "http://localhost:5152/","contact": {"name": "GeoWave Team"},"license": {"name": "MIT"}},"host": "localhost:5152","basePath": "/","schemes": ["http"],"consumes": ["application/json"],"produces": ["application/json"],"paths":{"/geowave/config/addindex/spatial":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.config.addindex.AddIndexSection.spatial","description":"Configure an index for usage in GeoWave","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true},{"name":"makeDefault","in":"query","type":"boolean","description":"Make this the default index creating stores","required":false},{"name":"nameOverride","in":"query","type":"string","description":"A custom name can be given to this index. Default name will be the based on configuration parameters.","required":false},{"name":"numPartitions","in":"query","type":"integer","description":"The number of partitions.  Default partitions will be 1.","required":false},{"name":"partitionStrategy","in":"query","type":"string","description":"The partition strategy to use.  Default will be none.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["addindex"]}},"/geowave/config/addindex/spatial_temporal":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.config.addindex.AddIndexSection.spatial_temporal","description":"Configure an index for usage in GeoWave","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true},{"name":"makeDefault","in":"query","type":"boolean","description":"Make this the default index creating stores","required":false},{"name":"nameOverride","in":"query","type":"string","description":"A custom name can be given to this index. Default name will be the based on configuration parameters.","required":false},{"name":"numPartitions","in":"query","type":"integer","description":"The number of partitions.  Default partitions will be 1.","required":false},{"name":"partitionStrategy","in":"query","type":"string","description":"The partition strategy to use.  Default will be none.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["addindex"]}},"/geowave/config/addindexgrp":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.addindexgrp","description":"Create an index group for usage in GeoWave","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name] [comma separated list of indexes]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/addstore/accumulo":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.config.addstore.AddStoreSection.accumulo","description":"Create an accumulo store within Geowave","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true},{"name":"makeDefault","in":"query","type":"boolean","description":"Make this the default store in all operations","required":false},{"name":"geowaveNamespace","in":"query","type":"string","description":"The geowave namespace (optional; default is no namespace)","required":false},{"name":"zookeeper","in":"query","type":"string","description":"A comma-separated list of zookeeper servers that an Accumulo instance is using","required":true},{"name":"instance","in":"query","type":"string","description":"The Accumulo instance ID","required":true},{"name":"user","in":"query","type":"string","description":"A valid Accumulo user ID","required":true},{"name":"password","in":"query","type":"string","description":"The password for the user. Can be specified as \u0027pass:[password]\u0027, \u0027file:[local file containing the password]\u0027, \u0027propfile:[local properties file containing the password]:[property file key]\u0027, \u0027env:[variable containing the pass]\u0027, or stdin","required":false},{"name":"useLocalityGroups","in":"query","type":"boolean","required":false},{"name":"persistAdapter","in":"query","type":"boolean","required":false},{"name":"persistIndex","in":"query","type":"boolean","required":false},{"name":"persistDataStatistics","in":"query","type":"boolean","required":false},{"name":"createTable","in":"query","type":"boolean","required":false},{"name":"useAltIndex","in":"query","type":"boolean","required":false},{"name":"enableBlockCache","in":"query","type":"boolean","required":false},{"name":"geowaveNamespace","in":"query","type":"string","description":"The geowave namespace (optional; default is no namespace)","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["addstore"]}},"/geowave/config/addstore/memory":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.config.addstore.AddStoreSection.memory","description":"Create a store within Geowave","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true},{"name":"makeDefault","in":"query","type":"boolean","description":"Make this the default store in all operations","required":false},{"name":"geowaveNamespace","in":"query","type":"string","description":"The geowave namespace (optional; default is no namespace)","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["addstore"]}},"/geowave/config/cpindex":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.cpindex","description":"Copy and modify existing index configuration","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name] [new name]","required":true},{"name":"makeDefault","in":"query","type":"boolean","description":"Make this the default index creating stores","required":false},{"name":"nameOverride","in":"query","type":"string","description":"A custom name can be given to this index. Default name will be the based on configuration parameters.","required":false},{"name":"numPartitions","in":"query","type":"integer","description":"The number of partitions.  Default partitions will be 1.","required":false},{"name":"partitionStrategy","in":"query","type":"string","description":"The partition strategy to use.  Default will be none.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/cpstore":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.cpstore","description":"Copy and modify existing store configuration","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name] [new name]","required":true},{"name":"makeDefault","in":"query","type":"boolean","description":"Make this the default store in all operations","required":false},{"name":"geowaveNamespace","in":"query","type":"string","description":"The geowave namespace (optional; default is no namespace)","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/list":{"get":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.list","description":"List property name within cache","parameters":[{"name":"filter","in":"query","type":"string","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/rmindex":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.rmindex","description":"Remove index configuration from Geowave configuration","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/rmindexgrp":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.rmindexgrp","description":"Remove index group from Geowave configuration","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/rmstore":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.rmstore","description":"Remove store from Geowave configuration","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/config/set":{"post":{"operationId":"mil.nga.giat.geowave.core.cli.operations.config.ConfigSection.set","description":"Set property name within cache","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[name] [value]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["config"]}},"/geowave/ingest/kafkaToGW":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.kafkaToGW","description":"Subscribe to a Kafka topic and ingest into GeoWave","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [comma delimited index/group list]","required":true},{"name":"visibility","in":"query","type":"string","description":"The visibility of the data ingested (optional; default is \u0027public\u0027)","required":false},{"name":"groupId","in":"query","type":"string","description":"A string that uniquely identifies the group of consumer processes to which this consumer belongs. By setting the same group id multiple processes indicate that they are all part of the same consumer group.","required":false},{"name":"zookeeperConnect","in":"query","type":"string","description":"Specifies the ZooKeeper connection string in the form hostname:port where host and port are the host and port of a ZooKeeper server. To allow connecting through other ZooKeeper nodes when that ZooKeeper machine is down you can also specify multiple hosts in the form hostname1:port1,hostname2:port2,hostname3:port3.","required":false},{"name":"autoOffsetReset","in":"query","type":"string","description":"What to do when there is no initial offset in ZooKeeper or if an offset is out of range:\n\t* smallest : automatically reset the offset to the smallest offset\n\t* largest : automatically reset the offset to the largest offset\n\t* anything else: throw exception to the consumer\n","required":false},{"name":"fetchMessageMaxBytes","in":"query","type":"string","description":"The number of bytes of messages to attempt to fetch for each topic-partition in each fetch request. These bytes will be read into memory for each partition, so this helps control the memory used by the consumer. The fetch request size must be at least as large as the maximum message size the server allows or else it is possible for the producer to send messages larger than the consumer can fetch.","required":false},{"name":"consumerTimeoutMs","in":"query","type":"string","description":"By default, this value is -1 and a consumer blocks indefinitely if no new message is available for consumption. By setting the value to a positive integer, a timeout exception is thrown to the consumer if no message is available for consumption after the specified timeout value.","required":false},{"name":"reconnectOnTimeout","in":"query","type":"boolean","description":"This flag will flush when the consumer timeout occurs (based on kafka property \u0027consumer.timeout.ms\u0027) and immediately reconnect","required":false},{"name":"batchSize","in":"query","type":"integer","description":"The data will automatically flush after this number of entries","required":false},{"name":"kafkaPropertyFile","in":"query","type":"string","description":"Properties file containing Kafka properties","required":true},{"name":"extensions","in":"query","type":"array","items":{"type":"string"},"description":"individual or comma-delimited set of file extensions to accept (optional)","required":false},{"name":"formats","in":"query","type":"string","description":"Explicitly set the ingest formats by name (or multiple comma-delimited formats), if not set all available ingest formats will be used","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/ingest/listplugins":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.listplugins","description":"List supported data store types, index types, and ingest formats","parameters":[],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/ingest/localToGW":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.localToGW","description":"Ingest supported files in local file system directly, without using HDFS","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[file or directory] [storename] [comma delimited index/group list]","required":true},{"name":"visibility","in":"query","type":"string","description":"The visibility of the data ingested (optional; default is \u0027public\u0027)","required":false},{"name":"extensions","in":"query","type":"array","items":{"type":"string"},"description":"individual or comma-delimited set of file extensions to accept (optional)","required":false},{"name":"formats","in":"query","type":"string","description":"Explicitly set the ingest formats by name (or multiple comma-delimited formats), if not set all available ingest formats will be used","required":false},{"name":"threads","in":"query","type":"integer","description":"number of threads to use for ingest, default to 1 (optional)","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/ingest/localToHdfs":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.localToHdfs","description":"Stage supported files in local file system to HDFS","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[file or directory] [hdfs host:port] [path to base directory to write to]","required":true},{"name":"extensions","in":"query","type":"array","items":{"type":"string"},"description":"individual or comma-delimited set of file extensions to accept (optional)","required":false},{"name":"formats","in":"query","type":"string","description":"Explicitly set the ingest formats by name (or multiple comma-delimited formats), if not set all available ingest formats will be used","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/ingest/localToKafka":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.localToKafka","description":"Stage supported files in local file system to a Kafka topic","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[file or directory]","required":true},{"name":"metadataBrokerList","in":"query","type":"string","description":"This is for bootstrapping and the producer will only use it for getting metadata (topics, partitions and replicas). The socket connections for sending the actual data will be established based on the broker information returned in the metadata. The format is host1:port1,host2:port2, and the list can be a subset of brokers or a VIP pointing to a subset of brokers.","required":false},{"name":"requestRequiredAcks","in":"query","type":"string","description":"This value controls when a produce request is considered completed. Specifically, how many other brokers must have committed the data to their log and acknowledged this to the leader?","required":false},{"name":"producerType","in":"query","type":"string","description":"This parameter specifies whether the messages are sent asynchronously in a background thread. Valid values are (1) async for asynchronous send and (2) sync for synchronous send. By setting the producer to async we allow batching together of requests (which is great for throughput) but open the possibility of a failure of the client machine dropping unsent data.","required":false},{"name":"serializerClass","in":"query","type":"string","description":"The serializer class for messages. The default encoder takes a byte[] and returns the same byte[].","required":false},{"name":"retryBackoffMs","in":"query","type":"string","description":"The amount of time to wait before attempting to retry a failed produce request to a given topic partition. This avoids repeated sending-and-failing in a tight loop.","required":false},{"name":"kafkaPropertyFile","in":"query","type":"string","description":"Properties file containing Kafka properties","required":true},{"name":"extensions","in":"query","type":"array","items":{"type":"string"},"description":"individual or comma-delimited set of file extensions to accept (optional)","required":false},{"name":"formats","in":"query","type":"string","description":"Explicitly set the ingest formats by name (or multiple comma-delimited formats), if not set all available ingest formats will be used","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/ingest/localToMrGW":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.localToMrGW","description":"Copy supported files from local file system to HDFS and ingest from HDFS","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[file or directory] [hdfs host:port] [path to base directory to write to] [store name] [comma delimited index/group list]","required":true},{"name":"visibility","in":"query","type":"string","description":"The visibility of the data ingested (optional; default is \u0027public\u0027)","required":false},{"name":"jobTrackerHostPort","in":"query","type":"string","description":"Hadoop job tracker hostname and port in the format hostname:port","required":false},{"name":"resourceManager","in":"query","type":"string","description":"Yarn resource manager hostname and port in the format hostname:port","required":false},{"name":"extensions","in":"query","type":"array","items":{"type":"string"},"description":"individual or comma-delimited set of file extensions to accept (optional)","required":false},{"name":"formats","in":"query","type":"string","description":"Explicitly set the ingest formats by name (or multiple comma-delimited formats), if not set all available ingest formats will be used","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/ingest/mrToGW":{"post":{"operationId":"mil.nga.giat.geowave.core.ingest.operations.IngestSection.mrToGW","description":"Ingest supported files that already exist in HDFS","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[hdfs host:port] [path to base directory to write to] [store name] [comma delimited index/group list]","required":true},{"name":"visibility","in":"query","type":"string","description":"The visibility of the data ingested (optional; default is \u0027public\u0027)","required":false},{"name":"jobTrackerHostPort","in":"query","type":"string","description":"Hadoop job tracker hostname and port in the format hostname:port","required":false},{"name":"resourceManager","in":"query","type":"string","description":"Yarn resource manager hostname and port in the format hostname:port","required":false},{"name":"extensions","in":"query","type":"array","items":{"type":"string"},"description":"individual or comma-delimited set of file extensions to accept (optional)","required":false},{"name":"formats","in":"query","type":"string","description":"Explicitly set the ingest formats by name (or multiple comma-delimited formats), if not set all available ingest formats will be used","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["ingest"]}},"/geowave/remote/calcstat":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.calcstat","description":"Calculate a specific statistic in the remote store, given adapter ID and statistic ID","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [adapterId] [statId]","required":true},{"name":"authorizations","in":"query","type":"string","description":"The authorizations used for the statistics calculation as a subset of the accumulo user authorization; by default all authorizations are used.","required":false},{"name":"jsonFormatFlag","in":"query","type":"boolean","description":"Output in JSON format.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/clear":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.clear","description":"Clear ALL data from a GeoWave store and delete tables","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/listadapter":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.listadapter","description":"Display all adapters in this remote store","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/listindex":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.listindex","description":"Display all indices in this remote store","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/liststats":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.liststats","description":"Print statistics of an existing GeoWave dataset to standard output.  ","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [[adapter name]]","required":true},{"name":"authorizations","in":"query","type":"string","description":"The authorizations used for the statistics calculation as a subset of the accumulo user authorization; by default all authorizations are used.","required":false},{"name":"jsonFormatFlag","in":"query","type":"boolean","description":"Output in JSON format.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/recalcstats":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.recalcstats","description":"Calculate the statistics of an existing GeoWave dataset","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [[adapter name]]","required":true},{"name":"authorizations","in":"query","type":"string","description":"The authorizations used for the statistics calculation as a subset of the accumulo user authorization; by default all authorizations are used.","required":false},{"name":"jsonFormatFlag","in":"query","type":"boolean","description":"Output in JSON format.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/rmadapter":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.rmadapter","description":"Remove an adapter from the remote store and all associated data for the adapter","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [adapterId]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/rmindex":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.rmindex","description":"Remove an index from the remote store and all associated data for the index","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [indexId]","required":true}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}},"/geowave/remote/rmstat":{"post":{"operationId":"mil.nga.giat.geowave.core.store.operations.remote.RemoteSection.rmstat","description":"Remove a statistic from the remote store. You will be prompted with are you sure","parameters":[{"name":"parameters","in":"query","type":"array","items":{"type":"string"},"description":"[store name] [adapterId] [statId]","required":true},{"name":"authorizations","in":"query","type":"string","description":"The authorizations used for the statistics calculation as a subset of the accumulo user authorization; by default all authorizations are used.","required":false},{"name":"jsonFormatFlag","in":"query","type":"boolean","description":"Output in JSON format.","required":false}],"responses":{"200":{"description":"success"},"404":{"description":"route not found"},"500":{"description":"invalid or null parameter"}},"tags":["remote"]}}}}